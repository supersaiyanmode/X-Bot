//--------------------------------------------------------------------------------
//
//	Checkers	by:-	David A.S.Crofts
//	========			23 Brisbane Street 
//						Berwick Victoria 3806
//						Australia
//
//						dasc1961@netscape.net
//
//						http://members.iimetro.com.au/~crofts/david.htm
//
//						17 January, 2011
//
//--------------------------------------------------------------------------------


#include  "const.h"
#include  "types.h"


/*

	PIECE POSITION NUMBERS FOR THE FOLLOWING ARRAYS.
	===============================================

	NOTE:- In a STATE the board[] numbers are one less
	       as 0 is pad in these arrays.
		  
		   I later discovered that this board is the
		   vertical mirror image of the correct board
		   so "Checkers.cpp" displays the correct board
		   and then converts it to this to save me 
		   retyping these arrays.


	+-----+-----+-----+-----+-----+-----+-----+-----+
	|     |#####|     |#####|     |#####|     |#####|
	| 29  |#####| 30  |#####| 31  |#####| 32  |#####|
	|     |#####|     |#####|     |#####|     |#####|
	+-----+-----+-----+-----+-----+-----+-----+-----+
	|#####|     |#####|     |#####|     |#####|     |
	|#####| 25  |#####| 26  |#####| 27  |#####| 28  |
	|#####|     |#####|     |#####|     |#####|     |
	+-----+-----+-----+-----+-----+-----+-----+-----+
	|     |#####|     |#####|     |#####|     |#####|
	| 21  |#####| 22  |#####| 23  |#####| 24  |#####|
	|     |#####|     |#####|     |#####|     |#####|
	+-----+-----+-----+-----+-----+-----+-----+-----+
	|#####|     |#####|     |#####|     |#####|     |
	|#####| 17  |#####| 18  |#####| 19  |#####| 20  |
	|#####|     |#####|     |#####|     |#####|     |
	+-----+-----+-----+-----+-----+-----+-----+-----+
	|     |#####|     |#####|     |#####|     |#####|
	| 13  |#####| 14  |#####| 15  |#####| 16  |#####|
	|     |#####|     |#####|     |#####|     |#####|
	+-----+-----+-----+-----+-----+-----+-----+-----+
	|#####|     |#####|     |#####|     |#####|     |
	|#####|  9  |#####| 10  |#####| 11  |#####| 12  |
	|#####|     |#####|     |#####|     |#####|     |
	+-----+-----+-----+-----+-----+-----+-----+-----+
	|     |#####|     |#####|     |#####|     |#####|
	|  5  |#####|  6  |#####|  7  |#####|  8  |#####|
	|     |#####|     |#####|     |#####|     |#####|
	+-----+-----+-----+-----+-----+-----+-----+-----+
	|#####|     |#####|     |#####|     |#####|     |
	|#####|  1  |#####|  2  |#####|  3  |#####|  4  |
	|#####|     |#####|     |#####|     |#####|     |
	+-----+-----+-----+-----+-----+-----+-----+-----+



                             +-----------------------------------------+
							 | 0 = PLAYER_PIECE,   1 = PLAYER_KING,    |
						+----+                                         |
						|    | 2 = COMPUTER_PIECE, 3 = COMPUTER_KING   |
						|    +-----------------------------------------+
						|
						|         +--------------------------+
						|         | 0 to 31 corresponds to   | 
						|   +-----+                          |
						|   |     | board positions 1 to 32  |
                        |   |     +--------------------------+			
                        |   |								                  
                        |   |								                  */
unsigned char num_moves[4][32] = {	// Number of moves for a piece at a position

    {2,2,2,1,
     1,2,2,2,
     2,2,2,1,
     1,2,2,2,
     2,2,2,1,
     1,2,2,2,
     2,2,2,1,
     0,0,0,0},
	
    {2,2,2,1,
     2,4,4,4,
     4,4,4,2,
     2,4,4,4,
     4,4,4,2,
     2,4,4,4,
     4,4,4,2,
     1,2,2,2},
	
    {0,0,0,0,
     1,2,2,2,
     2,2,2,1,
     1,2,2,2,
     2,2,2,1,
     1,2,2,2,
     2,2,2,1,
     1,2,2,2},
	
    {2,2,2,1,
     2,4,4,4,
     4,4,4,2,
     2,4,4,4,
     4,4,4,2,
     2,4,4,4,
     4,4,4,2,
     1,2,2,2}
};


/*
                         +-----------------------------------------+
				         | 0 = PLAYER_PIECE,   1 = PLAYER_KING,    |
				    +----+                                         |
				    |    | 2 = COMPUTER_PIECE, 3 = COMPUTER_KING   |
				    |    +-----------------------------------------+
					|
					|         +--------------------------+
					|         | 0 to 31 corresponds to   | 
					|   +-----+                          |
                    |   |     | board positions 1 to 32  |
                    |   |     +--------------------------+			
                    |   |								                  
                    |   |								                  
                    |   |		 +------------------------------+           
                    |   |		 | board positions of move.		|				                  
                    |   |  +-----+								|                  
                    |   |  |	 | 0 is pad and means no move.  |							                  
                    |   |  |     +------------------------------+                
                    |   |  |								                  
                    |   |  |								                  
                    |   |  |					                  */
unsigned char moves[4][32][4] = {	// Possible move positions
									// for a piece at a position.

    {{5,6,0,0},     {6,7,0,0},     {7,8,0,0},     {8,0,0,0},
     {9,0,0,0},     {9,10,0,0},    {10,11,0,0},   {11,12,0,0},
     {13,14,0,0},   {14,15,0,0},   {15,16,0,0},   {16,0,0,0},
     {17,0,0,0},    {17,18,0,0},   {18,19,0,0},   {19,20,0,0},
     {21,22,0,0},   {22,23,0,0},   {23,24,0,0},   {24,0,0,0},
     {25,0,0,0},    {25,26,0,0},   {26,27,0,0},   {27,28,0,0},
     {29,30,0,0},   {30,31,0,0},   {31,32,0,0},   {32,0,0,0},
     {0,0,0,0},     {0,0,0,0},     {0,0,0,0},     {0,0,0,0}},
	
    {{5,6,0,0},     {6,7,0,0},     {7,8,0,0},     {8,0,0,0},
     {9,1,0,0},     {9,10,1,2},    {10,11,2,3},   {11,12,3,4},
     {13,14,5,6},   {14,15,6,7},   {15,16,7,8},   {16,8,0,0},
     {17,9,0,0},    {17,18,9,10},  {18,19,10,11}, {19,20,11,12},
     {21,22,13,14}, {22,23,14,15}, {23,24,15,16}, {24,16,0,0},
     {25,17,0,0},   {25,26,17,18}, {26,27,18,19}, {27,28,19,20},
     {29,30,21,22}, {30,31,22,23}, {31,32,23,24}, {32,24,0,0},
     {25,0,0,0},    {25,26,0,0},   {26,27,0,0},   {27,28,0,0}},
	
    {{0,0,0,0},     {0,0,0,0},     {0,0,0,0},     {0,0,0,0},
     {1,0,0,0},     {1,2,0,0},     {2,3,0,0},     {3,4,0,0},
     {5,6,0,0},     {6,7,0,0},     {7,8,0,0},     {8,0,0,0},
     {9,0,0,0},     {9,10,0,0},    {10,11,0,0},   {11,12,0,0},
     {13,14,0,0},   {14,15,0,0},   {15,16,0,0},   {16,0,0,0},
     {17,0,0,0},    {17,18,0,0},   {18,19,0,0},   {19,20,0,0},
     {21,22,0,0},   {22,23,0,0},   {23,24,0,0},   {24,0,0,0},
     {25,0,0,0},    {25,26,0,0},   {26,27,0,0},   {27,28,0,0}},
	
    {{5,6,0,0},     {6,7,0,0},     {7,8,0,0},     {8,0,0,0},
     {9,1,0,0},     {9,10,1,2},    {10,11,2,3},   {11,12,3,4},
     {13,14,5,6},   {14,15,6,7},   {15,16,7,8},   {16,8,0,0},
     {17,9,0,0},    {17,18,9,10},  {18,19,10,11}, {19,20,11,12},
     {21,22,13,14}, {22,23,14,15}, {23,24,15,16}, {24,16,0,0},
     {25,17,0,0},   {25,26,17,18}, {26,27,18,19}, {27,28,19,20},
     {29,30,21,22}, {30,31,22,23}, {31,32,23,24}, {32,24,0,0},
     {25,0,0,0},    {25,26,0,0},   {26,27,0,0},   {27,28,0,0}}
};


/*
                         +-----------------------------------------+
				         | 0 = PLAYER_PIECE,   1 = PLAYER_KING,    |
				    +----+                                         |
				    |    | 2 = COMPUTER_PIECE, 3 = COMPUTER_KING   |
				    |    +-----------------------------------------+
					|
					|         +--------------------------+
					|         | 0 to 31 corresponds to   | 
					|   +-----+                          |
                    |   |     | board positions 1 to 32  |
                    |   |     +--------------------------+			
                    |   |								                  
                    |   |								                  
                    |   |		 +--------------------------------------+           
                    |   |		 | board end positions of single jump.  |				                  
                    |   |  +-----+				     			        |                  
					|	|  |	 | jumps[][][i] maps to moves[][][i]    |					                  
					|	|  |	 |                                      |					                  
                    |   |  |	 | 0 is pad and means no jump.	        |
                    |   |  |     +--------------------------------------+                
                    |   |  |								                  
                    |   |  |								                  
                    |   |  |								           */
unsigned char jumps[4][32][4] = {	// Possible single jump positions 
									// for a piece at a position.

    {{0,10,0,0},     {9,11,0,0},    {10,12,0,0},   {11,0,0,0},
     {14,0,0,0},     {13,15,0,0},   {14,16,0,0},   {15,0,0,0},
     {0,18,0,0},     {17,19,0,0},   {18,20,0,0},   {19,0,0,0},
     {22,0,0,0},     {21,23,0,0},   {22,24,0,0},   {23,0,0,0},
     {0,26,0,0},     {25,27,0,0},   {26,28,0,0},   {27,0,0,0},
     {30,0,0,0},     {29,31,0,0},   {30,32,0,0},   {31,0,0,0},
     {0,0,0,0},      {0,0,0,0},     {0,0,0,0},     {0,0,0,0},
     {0,0,0,0},      {0,0,0,0},     {0,0,0,0},     {0,0,0,0}},
	
    {{0,10,0,0},     {9,11,0,0},    {10,12,0,0},   {11,0,0,0},
     {14,0,0,0},     {13,15,0,0},   {14,16,0,0},   {15,0,0,0},
     {0,18,0,2},     {17,19,1,3},   {18,20,2,4},   {19,3,0,0},
     {22,6,0,0},     {21,23,5,7},   {22,24,6,8},   {23,0,7,0},
     {0,26,0,10},    {25,27,9,11},  {26,28,10,12}, {27,11,0,0},
     {30,14,0,0},    {29,31,13,15}, {30,32,14,16}, {31,0,15,0},
     {0,0,0,18},     {0,0,17,19},   {0,0,18,20},   {0,19,0,0},
     {22,0,0,0},     {21,23,0,0},   {22,24,0,0},   {23,0,0,0}},
	
    {{0,0,0,0},      {0,0,0,0},     {0,0,0,0},     {0,0,0,0},
     {0,0,0,0},      {0,0,0,0},     {0,0,0,0},     {0,0,0,0},
     {0,2,0,0},      {1,3,0,0},     {2,4,0,0},     {3,0,0,0},
     {6,0,0,0},      {5,7,0,0},     {6,8,0,0},     {7,0,0,0},
     {0,10,0,0},     {9,11,0,0},    {10,12,0,0},   {11,0,0,0},
     {14,0,0,0},     {13,15,0,0},   {14,16,0,0},   {15,0,0,0},
     {0,18,0,0},     {17,19,0,0},   {18,20,0,0},   {19,0,0,0},
     {22,0,0,0},     {21,23,0,0},   {22,24,0,0},   {23,0,0,0}},
	
    {{0,10,0,0},     {9,11,0,0},    {10,12,0,0},   {11,0,0,0},
     {14,0,0,0},     {13,15,0,0},   {14,16,0,0},   {15,0,0,0},
     {0,18,0,2},     {17,19,1,3},   {18,20,2,4},   {19,3,0,0},
     {22,6,0,0},     {21,23,5,7},   {22,24,6,8},   {23,0,7,0},
     {0,26,0,10},    {25,27,9,11},  {26,28,10,12}, {27,11,0,0},
     {30,14,0,0},    {29,31,13,15}, {30,32,14,16}, {31,0,15,0},
     {0,0,0,18},     {0,0,17,19},   {0,0,18,20},   {0,19,0,0},
     {22,0,0,0},     {21,23,0,0},   {22,24,0,0},   {23,0,0,0}}
};


//-----------------------------------------------------------------------------
//	Optimization Blocks of Variables when it is the Computers or Oponents turn.
//
//	mover_piece
//  mover_king
//  oponent_piece
//  oponent_king
//
//  Saves setting 4 variables and passing them as parameters.
//-----------------------------------------------------------------------------


PIECE_NOS computer_turn_nos = {
    COMPUTER_PIECE,
    COMPUTER_KING,
    PLAYER_PIECE,
    PLAYER_KING
};

PIECE_NOS opponent_turn_nos = {
    PLAYER_PIECE,
    PLAYER_KING,
    COMPUTER_PIECE,
    COMPUTER_KING
};


//-----------------------------------------------------------------------------
// Global variable that point to the current PIECE_NOS block.
//-----------------------------------------------------------------------------

PIECE_NOS_PTR   t;


//-----------------------------------------------------------------------------
// Global variable used by gen_sucessors() and add_jumps() 
// to know if a compulsory jump has been found.
// Saves multiple passes of this as a parameter.
//-----------------------------------------------------------------------------

bool			jump_found;


//-----------------------------------------------------------------------------
// Global variable used by gen_single_step_sucessors() to know if a compulsory
// jump has been found.
// Saves multiple passes of this as a parameter.
//-----------------------------------------------------------------------------

bool			jump_found_player;
								

